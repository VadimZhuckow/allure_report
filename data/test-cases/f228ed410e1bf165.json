{
  "uid" : "f228ed410e1bf165",
  "name" : "Тест логина для юзера None в окружении dev",
  "fullName" : "tests.ui.auth.test_login#test_login_ui_dev",
  "historyId" : "2d5f7d1436342838c5d72ec97bea311a",
  "time" : {
    "start" : 1732614044689,
    "stop" : 1732614086072,
    "duration" : 41383
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Кнопка 'Начать' не доступна для клика.",
  "statusTrace" : "self = <base.pages.login_page.LoginPage object at 0x7f0fbc742260>\n\n    def get_started(self):\n        try:\n>           get_started_button = self.wait_until_clickable(\n                (By.XPATH, \"//button[contains(@class, 'button button--small button--dark started')]\")\n            )\n\nbase/pages/login_page.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_page.py:13: in wait_until_clickable\n    return WebDriverWait(self.driver, timeout).until(EC.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cc84dc10fab051631ad7235e699d5872\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f0fbc7b8dc0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55563f0d431a <unknown>\nE       #1 0x55563ebea6e0 <unknown>\nE       #2 0x55563ec393e6 <unknown>\nE       #3 0x55563ec39681 <unknown>\nE       #4 0x55563ec7eb04 <unknown>\nE       #5 0x55563ec5d48d <unknown>\nE       #6 0x55563ec7bed7 <unknown>\nE       #7 0x55563ec5d203 <unknown>\nE       #8 0x55563ec2bcc0 <unknown>\nE       #9 0x55563ec2cc9e <unknown>\nE       #10 0x55563f0a1d0b <unknown>\nE       #11 0x55563f0a5c92 <unknown>\nE       #12 0x55563f08eb3c <unknown>\nE       #13 0x55563f0a6807 <unknown>\nE       #14 0x55563f0740df <unknown>\nE       #15 0x55563f0c3578 <unknown>\nE       #16 0x55563f0c3740 <unknown>\nE       #17 0x55563f0d3196 <unknown>\nE       #18 0x7f2463294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nsetup_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cc84dc10fab051631ad7235e699d5872\")>\n\n    @pytest.mark.dev\n    @allure.story(\"Логин\")\n    @allure.title(f\"Тест логина для юзера {mail} в окружении dev\")\n    def test_login_ui_dev(setup_driver):\n        landing = os.getenv('LANDING_DEV')\n        driver = setup_driver\n        driver.get(landing)\n    \n        login_page = LoginPage(driver)\n    \n        with allure.step(\"Нажимаем кнопку 'Начать'\"):\n>           login_page.get_started()\n\ntests/ui/auth/test_login.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <base.pages.login_page.LoginPage object at 0x7f0fbc742260>\n\n    def get_started(self):\n        try:\n            get_started_button = self.wait_until_clickable(\n                (By.XPATH, \"//button[contains(@class, 'button button--small button--dark started')]\")\n            )\n            get_started_button.click()\n        except TimeoutException:\n            self.take_screenshot(\"get_started_button_timeout\")\n>           raise AssertionError(\"Кнопка 'Начать' не доступна для клика.\")\nE           AssertionError: Кнопка 'Начать' не доступна для клика.\n\nbase/pages/login_page.py:17: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "setup_driver",
    "time" : {
      "start" : 1732614014567,
      "stop" : 1732614044689,
      "duration" : 30122
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Кнопка 'Начать' не доступна для клика.",
    "statusTrace" : "self = <base.pages.login_page.LoginPage object at 0x7f0fbc742260>\n\n    def get_started(self):\n        try:\n>           get_started_button = self.wait_until_clickable(\n                (By.XPATH, \"//button[contains(@class, 'button button--small button--dark started')]\")\n            )\n\nbase/pages/login_page.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_page.py:13: in wait_until_clickable\n    return WebDriverWait(self.driver, timeout).until(EC.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cc84dc10fab051631ad7235e699d5872\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f0fbc7b8dc0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55563f0d431a <unknown>\nE       #1 0x55563ebea6e0 <unknown>\nE       #2 0x55563ec393e6 <unknown>\nE       #3 0x55563ec39681 <unknown>\nE       #4 0x55563ec7eb04 <unknown>\nE       #5 0x55563ec5d48d <unknown>\nE       #6 0x55563ec7bed7 <unknown>\nE       #7 0x55563ec5d203 <unknown>\nE       #8 0x55563ec2bcc0 <unknown>\nE       #9 0x55563ec2cc9e <unknown>\nE       #10 0x55563f0a1d0b <unknown>\nE       #11 0x55563f0a5c92 <unknown>\nE       #12 0x55563f08eb3c <unknown>\nE       #13 0x55563f0a6807 <unknown>\nE       #14 0x55563f0740df <unknown>\nE       #15 0x55563f0c3578 <unknown>\nE       #16 0x55563f0c3740 <unknown>\nE       #17 0x55563f0d3196 <unknown>\nE       #18 0x7f2463294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nsetup_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cc84dc10fab051631ad7235e699d5872\")>\n\n    @pytest.mark.dev\n    @allure.story(\"Логин\")\n    @allure.title(f\"Тест логина для юзера {mail} в окружении dev\")\n    def test_login_ui_dev(setup_driver):\n        landing = os.getenv('LANDING_DEV')\n        driver = setup_driver\n        driver.get(landing)\n    \n        login_page = LoginPage(driver)\n    \n        with allure.step(\"Нажимаем кнопку 'Начать'\"):\n>           login_page.get_started()\n\ntests/ui/auth/test_login.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <base.pages.login_page.LoginPage object at 0x7f0fbc742260>\n\n    def get_started(self):\n        try:\n            get_started_button = self.wait_until_clickable(\n                (By.XPATH, \"//button[contains(@class, 'button button--small button--dark started')]\")\n            )\n            get_started_button.click()\n        except TimeoutException:\n            self.take_screenshot(\"get_started_button_timeout\")\n>           raise AssertionError(\"Кнопка 'Начать' не доступна для клика.\")\nE           AssertionError: Кнопка 'Начать' не доступна для клика.\n\nbase/pages/login_page.py:17: AssertionError",
    "steps" : [ {
      "name" : "Нажимаем кнопку 'Начать'",
      "time" : {
        "start" : 1732614047290,
        "stop" : 1732614086072,
        "duration" : 38782
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Кнопка 'Начать' не доступна для клика.\n",
      "statusTrace" : "  File \"/home/runner/work/aqapp/aqapp/tests/ui/auth/test_login.py\", line 24, in test_login_ui_dev\n    login_page.get_started()\n  File \"/home/runner/work/aqapp/aqapp/base/pages/login_page.py\", line 17, in get_started\n    raise AssertionError(\"Кнопка 'Начать' не доступна для клика.\")\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "setup_driver::0",
    "time" : {
      "start" : 1732614086148,
      "stop" : 1732614086218,
      "duration" : 70
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Логин"
  }, {
    "name" : "tag",
    "value" : "dev"
  }, {
    "name" : "parentSuite",
    "value" : "tests.ui.auth"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "host",
    "value" : "fv-az926-607"
  }, {
    "name" : "thread",
    "value" : "2242-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.ui.auth.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "dev" ]
  },
  "source" : "f228ed410e1bf165.json",
  "parameterValues" : [ ]
}